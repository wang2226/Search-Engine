Mon Jul 24 10:58:33 EDT 2017
+b main
Breakpoint 1 at 0x400bd8: file test-avl.cpp, line 9.
+run
Starting program: /u/data/u89/wang2226/cs251/lab3-src/test-avl 

Breakpoint 1, main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:9
9	{
+run
Starting program: /u/data/u89/wang2226/cs251/lab3-src/test-avl 

Breakpoint 1, main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:9
9	{
+n
10		printf("-----------------------------------\n");
+n
11		printf("Running test-avl\n");
+n
12		AVLDictionary * dict= new AVLDictionary();
+n
15		int max = 2;
+n
17		for ( i = 0; i < max; i++) {
+n
19			long k = i%79;
+n
20			sprintf(key, "k%ld", k);
+s
21			dict->addRecord(key, (void*) k);
+s
AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:25
25		if ( debug) {
+s
26			printf("------------------------------------\n");
+s
27			printf("addRecord(\"%s\",%ld)\n",  key, (long) record);
+s
28			printf("---------- Before -----------------\n");
+s
29			printNode("", root, 0);
+s
AVLDictionary::printNode (this=0x604010, s=0x402484 "", node=0x0, depth=0)
    at avl-dictionary2.cpp:94
94		AVLNode *current = root;
+s
96		for (int i = 0; i < depth; i++) {
+s
100		if (node==NULL) {
+s
101			printf("%s:NULL\n", s);
+s
102			return;
+s
109	}
+s
AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:35
35		AVLNode * curr = root;
+s
37		AVLNode * prev = NULL;
+s
39		while(curr != NULL){
+s
53		AVLNode * n = new AVLNode();
+s
54		n->key = key;
+s
55		n->data = record;
+s
56		n->left = NULL;
+s
57		n->right = NULL;
+s
58		n->parent = NULL;
+s
59		n->height = 1;
+s
62		if(root == NULL){	//root is NULL
+s
64			root = n;
+s
65			nElements++;
+p root->key
$1 = (KeyType) 0x7fffffffe1f0 "k0"
+p root->data
$2 = (DataType) 0x0
+n
66			return true;
+n
114	}	//insert
+n
main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:17
17		for ( i = 0; i < max; i++) {
+n
19			long k = i%79;
+n
20			sprintf(key, "k%ld", k);
+n
21			dict->addRecord(key, (void*) k);
+run
Starting program: /u/data/u89/wang2226/cs251/lab3-src/test-avl 

Breakpoint 1, main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:9
9	{
+n
10		printf("-----------------------------------\n");
+n
11		printf("Running test-avl\n");
+n
12		AVLDictionary * dict= new AVLDictionary();
+n
15		int max = 2;
+n
17		for ( i = 0; i < max; i++) {
+n
19			long k = i%79;
+n
20			sprintf(key, "k%ld", k);
+n
21			dict->addRecord(key, (void*) k);
+s
AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:25
25		if ( debug) {
+n
26			printf("------------------------------------\n");
+n
27			printf("addRecord(\"%s\",%ld)\n",  key, (long) record);
+n
28			printf("---------- Before -----------------\n");
+n
29			printNode("", root, 0);
+n
35		AVLNode * curr = root;
+n
37		AVLNode * prev = NULL;
+n
39		while(curr != NULL){
+n
53		AVLNode * n = new AVLNode();
+n
54		n->key = key;
+n
55		n->data = record;
+n
56		n->left = NULL;
+n
57		n->right = NULL;
+n
58		n->parent = NULL;
+n
59		n->height = 1;
+n
62		if(root == NULL){	//root is NULL
+n
64			root = n;
+n
65			nElements++;
+p root->key
$3 = (KeyType) 0x7fffffffe1f0 "k0"
+n
66			return true;
+n
114	}	//insert
+n
main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:17
17		for ( i = 0; i < max; i++) {
+n
19			long k = i%79;
+n
20			sprintf(key, "k%ld", k);
+n
21			dict->addRecord(key, (void*) k);
+n
17		for ( i = 0; i < max; i++) {
+s
24		for ( i = 0; i < max; i++) {
+run
Starting program: /u/data/u89/wang2226/cs251/lab3-src/test-avl 

Breakpoint 1, main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:9
9	{
+n
10		printf("-----------------------------------\n");
+n
11		printf("Running test-avl\n");
+n
12		AVLDictionary * dict= new AVLDictionary();
+n
15		int max = 2;
+n
17		for ( i = 0; i < max; i++) {
+n
19			long k = i%79;
+n
20			sprintf(key, "k%ld", k);
+n
21			dict->addRecord(key, (void*) k);
+s
AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:25
25		if ( debug) {
+n
26			printf("------------------------------------\n");
+n
27			printf("addRecord(\"%s\",%ld)\n",  key, (long) record);
+n
28			printf("---------- Before -----------------\n");
+n
29			printNode("", root, 0);
+n
35		AVLNode * curr = root;
+n
37		AVLNode * prev = NULL;
+n
39		while(curr != NULL){
+n
53		AVLNode * n = new AVLNode();
+n
54		n->key = key;
+n
55		n->data = record;
+n
56		n->left = NULL;
+n
57		n->right = NULL;
+n
58		n->parent = NULL;
+n
59		n->height = 1;
+n
62		if(root == NULL){	//root is NULL
+n
64			root = n;
+n
65			nElements++;
+n
66			return true;
+n
114	}	//insert
+n
main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:17
17		for ( i = 0; i < max; i++) {
+n
19			long k = i%79;
+n
20			sprintf(key, "k%ld", k);
+n
21			dict->addRecord(key, (void*) k);
+s
AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k1", record=0x1)
    at avl-dictionary.cpp:25
25		if ( debug) {
+p root->key
$4 = (KeyType) 0x7fffffffe1f0 "k1"
+info b
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000400bd8 in main(int, char**) at test-avl.cpp:9
	breakpoint already hit 1 time
+b test-avl.cpp:64
No line 64 in file "test-avl.cpp".
+b avl-dictionary.cpp:64
Breakpoint 2 at 0x400fe7: file avl-dictionary.cpp, line 64.
+run
Starting program: /u/data/u89/wang2226/cs251/lab3-src/test-avl 

Breakpoint 1, main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:9
9	{
+c
Continuing.

Breakpoint 2, AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:64
64			root = n;
+p root->key
Cannot access memory at address 0x0
+run
Starting program: /u/data/u89/wang2226/cs251/lab3-src/test-avl 

Breakpoint 1, main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:9
9	{
+n
10		printf("-----------------------------------\n");
+n
11		printf("Running test-avl\n");
+n
12		AVLDictionary * dict= new AVLDictionary();
+n
15		int max = 2;
+n
17		for ( i = 0; i < max; i++) {
+n
19			long k = i%79;
+n
20			sprintf(key, "k%ld", k);
+s
21			dict->addRecord(key, (void*) k);
+s
AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:25
25		if ( debug) {
+n
26			printf("------------------------------------\n");
+n
27			printf("addRecord(\"%s\",%ld)\n",  key, (long) record);
+n
28			printf("---------- Before -----------------\n");
+n
29			printNode("", root, 0);
+n
35		AVLNode * curr = root;
+n
37		AVLNode * prev = NULL;
+n
39		while(curr != NULL){
+n
53		AVLNode * n = new AVLNode();
+n
54		n->key = key;
+n
55		n->data = record;
+n
56		n->left = NULL;
+p n->key
$5 = (KeyType) 0x7fffffffe1f0 "k0"
+p n->data
$6 = (DataType) 0x0
+n
57		n->right = NULL;
+n
58		n->parent = NULL;
+n
59		n->height = 1;
+n
62		if(root == NULL){	//root is NULL
+n

Breakpoint 2, AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:64
64			root = n;
+n
65			nElements++;
+p root->key
$7 = (KeyType) 0x7fffffffe1f0 "k0"
+n
66			return true;
+n
114	}	//insert
+n
main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:17
17		for ( i = 0; i < max; i++) {
+n
19			long k = i%79;
+n
20			sprintf(key, "k%ld", k);
+n
21			dict->addRecord(key, (void*) k);
+s
AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k1", record=0x1)
    at avl-dictionary.cpp:25
25		if ( debug) {
+s
26			printf("------------------------------------\n");
+s
27			printf("addRecord(\"%s\",%ld)\n",  key, (long) record);
+s
28			printf("---------- Before -----------------\n");
+s
29			printNode("", root, 0);
+s
AVLDictionary::printNode (this=0x604010, s=0x402484 "", node=0x604030, depth=0)
    at avl-dictionary2.cpp:94
94		AVLNode *current = root;
+p root->key
$8 = (KeyType) 0x7fffffffe1f0 "k1"
+watch root
Hardware watchpoint 3: root
+run
Starting program: /u/data/u89/wang2226/cs251/lab3-src/test-avl 

Breakpoint 1, main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:9
9	{
+c
Continuing.

Breakpoint 2, AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:64
64			root = n;
+p root
$9 = (AVLNode *) 0x0
+p n
$10 = (AVLNode *) 0x604030
+c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x0000000000401876 in AVLDictionary::removeElement (this=0x604010, key=0x7fffffffe1f0 "k0")
    at avl-dictionary.cpp:371
371			if(node == node->parent->left){	//node to remove is its parent's left child
+run 
Starting program: /u/data/u89/wang2226/cs251/lab3-src/test-avl 

Breakpoint 1, main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:9
9	{
+c
Continuing.

Breakpoint 2, AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:64
64			root = n;
+p n->key
$11 = (KeyType) 0x7fffffffe1f0 "k0"
+b 25
Breakpoint 4 at 0x400e78: file avl-dictionary.cpp, line 25.
+c
Continuing.

Breakpoint 4, AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k1", record=0x1)
    at avl-dictionary.cpp:25
25		if ( debug) {
+p root->key
$12 = (KeyType) 0x7fffffffe1f0 "k1"
+r
Starting program: /u/data/u89/wang2226/cs251/lab3-src/test-avl 

Breakpoint 1, main (argc=1, argv=0x7fffffffe308) at test-avl.cpp:9
9	{
+c
Continuing.

Breakpoint 4, AVLDictionary::addRecord (this=0x604010, key=0x7fffffffe1f0 "k0", record=0x0)
    at avl-dictionary.cpp:25
25		if ( debug) {
+p root
$13 = (AVLNode *) 0x0
+p root
$14 = (AVLNode *) 0x0
+q
